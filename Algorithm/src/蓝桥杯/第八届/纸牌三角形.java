package 第八届;
/*
 * 
A,2,3,4,5,6,7,8,9 共9张纸牌排成一个正三角形（A按1计算）。要求每个边的和相等。
下图就是一种排法（如有对齐问题，参看p1.png）。

      A
     9 6
    4   8
   3 7 5 2

这样的排法可能会有很多。

如果考虑旋转、镜像后相同的算同一种，一共有多少种不同的排法呢？

请你计算并提交该数字。

注意：需要提交的是一个整数，不要提交任何多余内容。

---------------------------

笨笨有话说：
    感觉可以暴力破解哦。
    麻烦的是，对每个排法还要算出它的旋转、镜像排法，看看有没有和历史重复。

歪歪有话说：
    人家又不让你把所有情况都打印出来，只是要算种类数。
    对于每个基本局面，通过旋转、镜像能造出来的新局面数目不是固定的吗？

 */
public class 纸牌三角形 {
	static int[] a = new int[9];
	static int[] b = new int[9];
	static int count=0;
	static void f(int n)
	{
		if(n==9)
		{
			//System.out.println(a[0]+a[1]+a[3]+a[5]);
			if(a[0]+a[1]+a[3]+a[5]==a[0]+a[2]+a[4]+a[8]&&a[0]+a[1]+a[3]+a[5]==a[5]+a[6]+a[7]+a[8])
				count++;
			return ;
		}
		for(int j=0;j<9;j++)
		{
			if(b[j]==0)
			{
				b[j]++;
				a[n]=j+1;
				f(n+1);
				b[j]=0;
			}
		}
		
	}
	
	public static void main(String[] args) {
		
		f(0);
		System.out.println(count/6);
	}
}
