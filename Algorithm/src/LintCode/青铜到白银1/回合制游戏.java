package LintCode.青铜到白银1;

import java.util.Arrays;

/**
 * QW 是一个回合制游戏的玩家，今天他决定去打怪。
 *
 * QW 在一场战斗中会碰到 n 个怪物，每个怪物有攻击力 atk[i]，每回合结束时如果第 i 个怪物还活着，就会对 QW 造成 atk[i] 的伤害。QW 只能在每回合开始时击杀一个怪物，请帮 QW 出他打完所有怪物最少需要损失多少生命值。
 *
 * 样例
 * 样例 1：
 *
 * 输入：atk = [19,3]
 * 输出：3
 * 样例 2：
 *
 * 输入：atk = [1,3,2,5]
 * 输出：10
 * 注意事项
 * n, atk[i] <= 100000
 * 答案可能超过 int 范围
 */
public class 回合制游戏 {
    public static void main(String[] args) {
        int[] atk = {12840, 15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,15652,54825,70871,51794,43615,64267,70632,37745,18185,40644,47192,42906,5028,62940,62359,44128,54180,71243,44560,93184,18450,70250,89884,50881,42420,13008,36248,87748,89452
                ,1,2,23,43,5436,546,3544,4,5367,4657,657,354,35,46,3456,3546,35,24,36,754,35467,56,324,6548,675,567,8,567,345,9,68,234,87,987,89234,234,654,780,354,234,2,345,23,654,7,654,7867,58,67,957,9,54
        };
        //38663327941
        //System.out.println(atk.length);

        long start = System.currentTimeMillis();
        System.out.println(getAns(atk));
        System.out.println(System.currentTimeMillis() - start);
    }

    public static long getAns(int[] atk) {
        if (null == atk || atk.length == 0) {
            return 0;
        }
        int len = atk.length;
        Arrays.sort(atk);
        long sum = 0;
        for (int i = 0; i < len; i++) {
            sum += atk[i];
        }
        long result = 0;
        for (int i = len-1; i >= 0; i--) {
            sum -= atk[i];
            result += sum;
        }
        return result;
    }
}
